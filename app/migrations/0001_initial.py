# Generated by Django 3.2.6 on 2021-09-14 19:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('badge_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('value', models.IntegerField()),
                ('image', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'badge',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BadgeType',
            fields=[
                ('badge_type_id', models.IntegerField(primary_key=True, serialize=False)),
                ('badge_type_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'badge_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_id', models.IntegerField(primary_key=True, serialize=False)),
                ('media', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('user_rating', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('is_verified', models.BooleanField()),
                ('date_created', models.DateTimeField()),
                ('date_modified', models.DateTimeField()),
                ('description', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'post',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostComment',
            fields=[
                ('post_comment_id', models.IntegerField(primary_key=True, serialize=False)),
                ('comment', models.CharField(max_length=255)),
                ('number_of_likes', models.IntegerField()),
                ('date_created', models.DateTimeField()),
            ],
            options={
                'db_table': 'post_comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostLike',
            fields=[
                ('post_like_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'post_like',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostMention',
            fields=[
                ('post_mention_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'post_mention',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostSaved',
            fields=[
                ('post_saved_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'post_saved',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostShared',
            fields=[
                ('post_shared_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'post_shared',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostTag',
            fields=[
                ('post_tag_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'post_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostVenue',
            fields=[
                ('post_venue_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'post_venue',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tag_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TripBooked',
            fields=[
                ('trip_booked_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('booked_at', models.DateTimeField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('price', models.DecimalField(decimal_places=65535, max_digits=65535)),
            ],
            options={
                'db_table': 'trip_booked',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=255)),
                ('password_hash', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=255)),
                ('is_active', models.BooleanField()),
                ('date_created', models.DateTimeField(blank=True, null=True)),
                ('level', models.IntegerField()),
                ('phone_number', models.BigIntegerField(blank=True, null=True)),
                ('avatar', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserBadge',
            fields=[
                ('user_badge_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'user_badge',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserFollower',
            fields=[
                ('user_follower_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'user_follower',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('profile_id', models.IntegerField(primary_key=True, serialize=False)),
                ('bio', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('intro_media', models.CharField(blank=True, max_length=255, null=True)),
                ('bio_link', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'user_profile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfileTag',
            fields=[
                ('user_profile_tag_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'user_profile_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserSharedItinerary',
            fields=[
                ('user_shared_itinerary_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('thumbnail', models.CharField(max_length=255)),
                ('date_created', models.DateTimeField()),
                ('date_modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_shared_itinerary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserSharedItineraryPost',
            fields=[
                ('user_shared_itinerary_post_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'user_shared_itinerary_post',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserSharedItineraryTag',
            fields=[
                ('user_shared_itinerary_tag_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'user_shared_itinerary_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserTag',
            fields=[
                ('user_tag_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'user_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserTrip',
            fields=[
                ('user_trip_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'user_trip',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('venue_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('is_external', models.BooleanField()),
            ],
            options={
                'db_table': 'venue',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserFollowing',
            fields=[
                ('user_following', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='app.user')),
                ('user_id', models.IntegerField()),
                ('following_user_id', models.IntegerField()),
            ],
            options={
                'db_table': 'user_following',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VenueExternal',
            fields=[
                ('venue_external', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='app.venue')),
                ('api_id', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('latitude', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
            ],
            options={
                'db_table': 'venue_external',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VenueInternal',
            fields=[
                ('venue_internal', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='app.venue')),
                ('name', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('description', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('latitude', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
            ],
            options={
                'db_table': 'venue_internal',
                'managed': False,
            },
        ),
    ]
